

@{
    ViewData["Title"] = "Ciudades";
}

<h1>Ciudades</h1>


<p>
    <button class="btn btn-primary" onclick="crearCiudadModal()">
        <i class="fas fa-paw"></i> Nueva ciudad
    </button>
</p>


<div class="row">

    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th class="col-md-4">ID</th>
                <th class="col-md-4">Nombre</th>
                <th >Opciones</th>
            </tr>
        </thead>

        <tbody id="cuerpoCiudad"></tbody>
    </table>

</div>


<div class="modal fade" id="modalCiudad" tabindex="-1" role="dialog" aria-labelledby="modalPetLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="idTituloModalCiudad">Crear ciudad</h5>
            </div>
            <div class="modal-body">
                <form>

                    <div class="row">
                        <div class="col-md-6 form-group">
                            <label class="col-form-label">Nombre</label>
                            <input type="text" class="form-control" id="txtNombreCiudad" placeholder="Nombre" required>
                        </div>
                        <div class="col-md-6 form-group">
                            <label class="col-form-label">Pais</label>
                            <select id="cmbPais" class="form-control" onchange="seleccionarPais()" required>
                                <option>Seleccionar</option>
                            </select>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">
                    <i class="fas fa-window-close"></i>
                    Cancelar
                </button>
                <button type="button" class="btn btn-success" onclick="guardarCiudad()">
                    <i class="far fa-save"></i>
                    Guardar
                </button>
            </div>
        </div>
    </div>
</div>



@section Scripts{

<script type="text/javascript" charset="utf-8">

    var listaCiudades = [];
    var listaPaises = [];
    let idPais = '';

    $(document).ready(function () {

        obtenerPaises();
        obtenerCiudades()
    });

    function obtenerPaises() {
        $.ajax({
                url: '@Url.Action("ObtenerPaises", "Paises")',
            method: 'GET',
            dataType: "json",
            success: function (data) {

                console.log("paises?", data)
                listaPaises = data;
                cargarPaises(data) 
            },
            error: function (xhr, textStatus, errorThrown) {
                console.error(xhr, textStatus, errorThrown);
            }
        });
    }

    function obtenerCiudades() {
        $.ajax({
            url: '@Url.Action("ObtenerCiudades", "Ciudad")',
            method: 'GET',
            dataType: "json",
            success: function (data) {

                console.log("ciudades", data)

                listaCiudades = data;
                cargarGridCiudades(listaCiudades);
            },
            error: function (xhr, textStatus, errorThrown) {
                console.error(xhr, textStatus, errorThrown);
            }
        });
    }

    //Cargar comboBox
    function cargarPaises(data, selected) {
        $("#cmbPais").empty();
            $("#cmbPais").append('<option value="" disabled selected>Seleccione un pais</option>');
        $.each(data, function (i, lista) {
            $("#cmbPais").append('<option value="' + data[i].idPais + '">' + data[i].nombre + '</option>');
        });
    }

     //Cargar el id que selecciones en la variable
    function seleccionarPais() {
        var combo = document.getElementById("cmbPais");
        let selected = combo.options[combo.selectedIndex].value;
        idPais = selected;
        console.log("idpais ", idPais);
    }

    function cargarGridCiudades(data) {
        $("#cuerpoCiudad").html("");

        for (var i = 0; i < data.length; i++) {
            var tr = `
                    <tr>
                    <th>`+ data[i].id + `</th>
                    <th> `+ data[i].nombre + `</th>
                    <td>
                    <button  class="btn btn-warning" onclick="editarCiudad(`+ data[i].id + `)"><i class="fas fa-edit"></i> Editar</button>
                     <button class="btn btn-danger" onclick="eliminarCiudad(`+ data[i].id + `)"><i class="far fa-trash-alt"></i> Eliminar</button>
                    </td>
                </tr>
                `;
         $("#cuerpoCiudad").append(tr);
        }
    }

    function crearCiudadModal() {

        $('#idTituloModalCiudad').html("Crear Ciudad");
        $('#modalCiudad').modal("show");
    }

    function guardarCiudad() {

            let parametro = {
                Nombre: $("#txtNombreCiudad").val(),
                IdPais: idPais,
            };

                //if (idCiudad == '') {
                $.ajax({
                url: '@Url.Action("GuardarCiudad", "Ciudad")',
                    method: 'POST',
                    data: parametro,
                    dataType: "json",
                    success: function (data) {

                        if (data) {
                            alert("Ciudad Guardada exitosamente");

                            $('#modalCiudad').modal('hide');
                            obtenerCiudades();
                    
                        }else{
                            alert("ocurrio un error al guardar");
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.error(xhr, textStatus, errorThrown);
                    }
                });
                //} else {
                //    parametro.Id = idCiudad;
                //    console.log(parametro);
                //    console.log('actualizar');

                //    modalProcesando(true);
                //    $.ajax({
                //        url: '@Url.Action("UpdatePet", "Pet")',
                //        method: 'PUT',
                //        data: parametro,
                //        dataType: "json",
                //        success: function (data) {
                //            modalProcesando(false);

                //            console.log(listaPets);

                //            if (data) {
                //                $('#modalPet').modal('hide');
                //                limpiarForm();
                //                toastMessage('success', 'Mascota actualizada exitosamente!');
                //                //cargar nuevamente la data--------------------------------
                //                getAllMyPets();
                //            } else {
                //                toastMessage('error', 'Hubo un error al guardar, por favor intentarlo nuevamente!');
                //            }

                //        },
                //        error: function (xhr, textStatus, errorThrown) {
                //            modalProcesando(false);
                //            toastMessage('error', 'Hubo un error al guardar, por favor intentarlo nuevamente!');
                //            console.error(xhr, textStatus, errorThrown);
                //        }
                //    });
                //}
            
        }

    function eliminarCiudad(idCiudad){

            let parametro = {
                idCiudad: idCiudad,
            };

            $.ajax({
                url: '@Url.Action("EliminarCiudad", "Ciudad")',
                method: 'DELETE',
                data: parametro,
                dataType: "json",
                success: function (data) {

                    if (data) {
                        alert("Ciudad Eliminada exitosamente");
                        obtenerCiudades();

                    } else {
                        alert("ocurrio un error al eliminar");
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.error(xhr, textStatus, errorThrown);
                }
            });
    }

</script>
}